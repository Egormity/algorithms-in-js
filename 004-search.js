// const states = [
//   "Alabama",
//   "Alaska",
//   "Arizona",
//   "Arkansas",
//   "California",
//   "Colorado",
//   "Connecticut",
//   "Delaware",
//   "Florida",
//   "Georgia",
//   "Hawaii",
//   "Idaho",
//   "Illinois",
//   "Indiana",
//   "Iowa",
//   "Kansas",
//   "Kentucky",
//   "Louisiana",
//   "Maine",
//   "Maryland",
//   "Massachusetts",
//   "Michigan",
//   "Minnesota",
//   "Mississippi",
//   "Missouri",
//   "Montana",
//   "Nebraska",
//   "Nevada",
//   "New Hampshire",
//   "New Jersey",
//   "New Mexico",
//   "New York",
//   "North Carolina",
//   "North Dakota",
//   "Ohio",
//   "Oklahoma",
//   "Oregon",
//   "Pennsylvania",
//   "Rhode Island",
//   "South Carolina",
//   "South Dakota",
//   "Tennessee",
//   "Texas",
//   "Utah",
//   "Vermont",
//   "Virginia",
//   "Washington",
//   "West Virginia",
//   "Wisconsin",
//   "Wyoming",
// ];
// console.log(states.indexOf("New York"), states.indexOf("Krasnoyarsk"));

// const arr = [
//   17, 20, 51, 103, 153, 176, 177, 197, 210, 211, 230, 289, 324, 338, 378, 395, 412, 439, 442, 443, 451, 455,
//   461, 462, 482, 484, 500, 506, 507, 519, 524, 570, 576, 587, 590, 598, 599, 604, 629, 657, 667, 701, 723,
//   734, 753, 815, 889, 906, 934, 983, 1001, 1018, 1023, 1032, 1041, 1057, 1067, 1073, 1081, 1093, 1103, 1111,
//   1125, 1139, 1153, 1167, 1179, 1193, 1207, 1221, 1235, 1249, 1263, 1277, 1291, 1305, 1319, 1333, 1347, 1361,
//   1375, 1389, 1403, 1417, 1431, 1445, 1459, 1473, 1487, 1501, 1515, 1529, 1543, 1557, 1571, 1585, 1599, 1613,
//   1627, 1641, 1655, 1669, 1683, 1697, 1711, 1725, 1739, 1753, 1767, 1781, 1795, 1809, 1823, 1837, 1851, 1865,
//   1879, 1893, 1907, 1921, 1935, 1949, 1963, 1977, 1991, 2005, 2019, 2033, 2047, 2061, 2075, 2089, 2103, 2117,
//   2131, 2145, 2159, 2173, 2187, 2201, 2215, 2229, 2243, 2257, 2271, 2285, 2299, 2313, 2327, 2341, 2355, 2369,
//   2383, 2397, 2411, 2425, 2439, 2453, 2467, 2481, 2495, 2509, 2523, 2537, 2551, 2565, 2579, 2593, 2607, 2621,
//   2635, 2649, 2663, 2677, 2691, 2705, 2719, 2733, 2747, 2761, 2775, 2789, 2803, 2817, 2831, 2845, 2859, 2873,
//   2887, 2901, 2915, 2929, 2943, 2957, 2971, 2985, 2999, 3013, 3027, 3041, 3055, 3069, 3083, 3097, 3111, 3125,
//   3139, 3153, 3167, 3181, 3195, 3209, 3223, 3237, 3251, 3265, 3279, 3293, 3307, 3321, 3335, 3349, 3363, 3377,
//   3391, 3405, 3419, 3433, 3447, 3461, 3475, 3489, 3503, 3517, 3531, 3545, 3559, 3573, 3587, 3601, 3615, 3629,
//   3643, 3657, 3671, 3685, 3699, 3713, 3727, 3741, 3755, 3769, 3783, 3797, 3811, 3825, 3839, 3853, 3867, 3881,
//   3895, 3909, 3923, 3937, 3951, 3965, 3979, 3993, 4007, 4021, 4035, 4049, 4063, 4077, 4091, 4105, 4119, 4133,
//   4147, 4161, 4175, 4189, 4203, 4217, 4231, 4245, 4259, 4273, 4287, 4301, 4315, 4329, 4343, 4357, 4371, 4385,
//   4399, 4413, 4427, 4441, 4455, 4469, 4483, 4497, 4511, 4525, 4539, 4553, 4567, 4581, 4595, 4609, 4623, 4637,
//   4651, 4665, 4679, 4693, 4707, 4721, 4735, 4749, 4763, 4777, 4791, 4805, 4819, 4833, 4847, 4861, 4875, 4889,
//   4903, 4917, 4931, 4945, 4959, 4973, 4987, 5001, 5015, 5029, 5043, 5057, 5071, 5085, 5099, 5113, 5127, 5141,
//   5155, 5169, 5183, 5197, 5211, 5225, 5239, 5253, 5267, 5281, 5295, 5309, 5323, 5337, 5351, 5365, 5379, 5393,
//   5407, 5421, 5435, 5449, 5463, 5477, 5491, 5505, 5519, 5533, 5547, 5561, 5575, 5589, 5603, 5617, 5631, 5645,
//   5659, 5673, 5687, 5701, 5715, 5729, 5743, 5757, 5771, 5785, 5799, 5813, 5827, 5841, 5855, 5869, 5883, 5897,
//   5911, 5925, 5939, 5953, 5967, 5981, 5995, 6009, 6023, 6037, 6051, 6065, 6079, 6093, 6107, 6121, 6135, 6149,
//   6163, 6177, 6191, 6205, 6219, 6233, 6247, 6261, 6275, 6289, 6303, 6317, 6331, 6345, 6359, 6373, 6387, 6401,
//   6415, 6429, 6443, 6457, 6471, 6485, 6499, 6513, 6527, 6541, 6555, 6569, 6583, 6597, 6611, 6625, 6639, 6653,
//   6667, 6681, 6695, 6709, 6723, 6737, 6751, 6765, 6779, 6793, 6807, 6821, 6835, 6849, 6863, 6877, 6891, 6905,
//   6919, 6933, 6947, 6961, 6975, 6989, 7003, 7017, 7031, 7045, 7059, 7073, 7087, 7101, 7115, 7129, 7143, 7157,
//   7171, 7185, 7199, 7213, 7227, 7241, 7255, 7269, 7283, 7297, 7311, 7325, 7339, 7353, 7367, 7381, 7395, 7409,
//   7423, 7437, 7451, 7465, 7479, 7493, 7507, 7521, 7535, 7549, 7563, 7577, 7591, 7605, 7619, 7633, 7647, 7661,
//   7675, 7689, 7703, 7717, 7731, 7745, 7759, 7773, 7787, 7801, 7815, 7829, 7843, 7857, 7871, 7885, 7899, 7913,
//   7927, 7941, 7955, 7969, 7983, 7997, 8011, 8025,
// ];

// const binarySearch = (sortedArr, target) => {
//   if (sortedArr.length === 0 || target < sortedArr[0] || target > sortedArr.at(-1)) return -1;

//   let left = 0;
//   let right = sortedArr.length - 1;
//   let middle = Math.floor((left + right) / 2);

//   while (sortedArr[middle] !== target) {
//     console.log('Iteration');

//     if (target < sortedArr[middle]) right = middle - 1;
//     else left = middle + 1;
//     middle = Math.floor((left + right) / 2);

//     if (left > right) return -1;
//   }

//   return middle;
// };
// console.log(binarySearch(arr, 8025));

// const naiveSearch = (str, find) =>
//   str
//     .split('')
//     .map((el, i) => (str[i + find.length - 1] ? str.slice(i, i + find.length) : null))
//     .filter(el => el === find).length;
// console.log(naiveSearch('hello world how are you? hhowow how', 'how'));
